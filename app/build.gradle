buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile project(":lib")
}
compileKotlin2Js {
    kotlinOptions.sourceMap = true
}
task assembleWeb(type: Sync) {
    configurations.compile.each { file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                        !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "${projectDir}/build/kotlin-js-min/dev"

    dependsOn classes
}

assemble.dependsOn assembleWeb
//noinspection GroovyAssignabilityCheck
task packKotlin(type: Exec) {
    executable = 'npx.cmd'
    args = [
            'google-closure-compiler',
            '--compilation_level=SIMPLE',
            '--env=BROWSER',
            '--language_in=ECMASCRIPT5',
            '--language_out=ECMASCRIPT5',
            '--js_output_file=build/kotlin-js-min/js/base.js',
            '--js=build/kotlin-js-min/main/kotlin.js',
            '--js=build/kotlin-js-min/main/lib.js'
    ]
}
//noinspection GroovyAssignabilityCheck
task packMain(type: Exec) {
    executable = 'npx.cmd'
    args = [
            'google-closure-compiler',
            '--compilation_level=SIMPLE',
            '--env=BROWSER',
            '--language_in=ECMASCRIPT5',
            '--language_out=ECMASCRIPT5',
            '--js_output_file=build/kotlin-js-min/js/app.js',
            '--js=build/kotlin-js-min/main/app.js'
    ]
}